---

- name: Create Tiller ServiceAccount.
  k8s:
    state: present
    kubeconfig: "/home/{{ ansible_user_id }}/.kube/config"
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: tiller
        namespace: kube-system

- name: Apply Tiller RBAC definition.
  k8s:
    kubeconfig: "/home/{{ ansible_user_id }}/.kube/config"
    state: present
    definition: "{{ lookup('file', 'files/tiller-rbac.yml') | from_yaml }}"

- name: Set up Helm and Tiller.
  command: "{{ helm_bin_dir }}/helm init --service-account tiller"
  register: helm_init_result
  changed_when: "'already installed' not in helm_init_result.stdout"


- name: create helm pid
  set_fact:
    tun_pid_file: /tmp/helm_pid.pid

- name: set up a tunnel to tiller
  shell: |
    tiller_pod="$(kubectl get pod -l app=helm,name=tiller --namespace kube-system -o name|cut -d/ -f2)"
    nohup kubectl port-forward "$tiller_pod" 44134:44134 --namespace kube-system >/dev/null 2>&1 &
    echo "$!" >{{ tun_pid_file|quote }}
  args:
    creates: "{{ tun_pid_file }}"
  changed_when: false

# - name: Wait for Tiller to become responsive.
#   wait_for:
#     host: '127.0.0.1'
#     port: '44134'
#     delay: 60
#     timeout: 400
#     sleep: 30
#     state: started
#   when: "'already installed' not in helm_init_result.stdout"

- name: tear down the tunnel to tiller
  shell: |
    kill "$(cat {{ tun_pid_file|quote }})" || true
    rm -f {{ tun_pid_file|quote }}
  args:
    removes: "{{ tun_pid_file }}"
  changed_when: false